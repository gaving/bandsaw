<?xml version='1.0' encoding="UTF-8"?>

<project name="bandsaw" default="jar" basedir=".">

    <!-- Key directories -->
    <property name="bin" value="bin"/>
    <property name="dist" value="dist"/>
    <property name="cfg" value="cfg"/>
    <property name="include" value="include"/>
    <property name="lib" value="lib"/>
    <property name="icons" value="icons"/>
    <property name="cfg" value="cfg"/>
    <property name="src" value="src"/>

    <path id="ant-contrib-classpath">
        <fileset dir="${include}/" includes="ant-contrib-*.jar"/>
    </path>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties"
            classpathref="ant-contrib-classpath"/>

    <taskdef classname="net.sf.antcontrib.logic.For" name="for"
            classpathref="ant-contrib-classpath"/>

    <!-- require ant 1.7.0 or greater -->
    <if>
        <not> <antversion atleast="1.7.0"/> </not>
        <then>
            <echo>
                To build bandsaw, you must have ant 1.7.0 or greater.
            </echo>
            <fail message="incompatible ant version."/>
        </then>
    </if>

    <!-- determine if eclipse home is set -->
    <if>
        <or>
            <equals arg1="${eclipse.home}" arg2=""/>
            <equals arg1="${eclipse.home}" arg2="$${env.BANDSAW_ECLIPSE_HOME}"/>
        </or>
        <then>
            <echo>
                $${eclipse.home} not set.
                Please set via system arg (ant -Declipse.home=...) or
                via environment variable (export BANDSAW_ECLIPSE_HOME="...").
            </echo>
            <fail message="missing required property (see above)"/>
        </then>
        <else>
            <echo>what</echo>
        </else>
    </if>

    <target name="init">

        <!-- Create the bin directory structure used by compile -->
        <mkdir dir="${bin}" />

        <!-- Create the directory for the jar file -->
        <mkdir dir="${lib}" />

        <!-- Create the dist directory -->
        <mkdir dir="${dist}" />
    </target>

    <target name="compile" depends="init">
        <javac
            srcdir="${src}" 
            destdir="${bin}"
            source="1.5"
            target="1.5"
            includeAntRuntime="no"
            debug="true"
            deprecation="true"
            debuglevel="lines,vars,source">
            <compilerarg value="-Xlint"/>
            <classpath>
                <!-- Include all jar files  -->
                <fileset dir="${include}">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="${eclipse.home}" includes="startup.jar"/>
                <fileset dir="${eclipse.home}">
                    <include name="dropins/eclipse/plugins/org.eclipse.*.jar"/>
                    <include name="plugins/org.eclipse.*.jar"/>
                </fileset>
                <dirset dir="${eclipse.home}">
                    <include name="dropins/eclipse/plugins/org.eclipse.*"/>
                    <include name="plugins/org.eclipse.*"/>
                </dirset>
            </classpath>
        </javac>
    </target>

    <target name="clean">
        <echo message="Deleting non-essential dirs" />

        <!-- Delete non-essential dirs -->
        <delete dir="${bin}"/>
        <delete dir="${lib}"/>
        <delete dir="${dist}"/>

        <!-- Delete rogue class files in src dir -->
        <delete quiet="true">
            <fileset dir="${src}" includes="**/*.class"/>
        </delete>
    </target>

    <target name="jar" depends="compile">

        <copy todir="${bin}">
            <fileset dir="${cfg}">
                <include name="**/*"/>
            </fileset>
        </copy>

        <copy todir="${bin}/${icons}">
            <fileset dir="${icons}">
                <include name="**/*"/>
            </fileset>
        </copy>

        <!-- Unpackage all our dependences so we can jar them up -->
        <unjar dest="${bin}" overwrite="false">
            <fileset dir="${include}">
                <include name="**/*.jar"/>
                <exclude name="**/*swt*"/>
            </fileset>
        </unjar>

        <!-- Make a jar file -->
        <jar jarfile="${lib}/bandsaw.jar" basedir="${bin}/">
        </jar>
    </target>

    <target name="dist" depends="jar">

        <!-- Copy the lib directory containing the main jar file -->
        <copy todir="${dist}">
            <fileset dir="${lib}">
                <include name="**/*.jar"/>
            </fileset>
        </copy>

        <!-- Copy user configuration over -->
        <copy todir="${dist}/">
            <fileset dir=".">
                <include name="plugin.xml"/>
            </fileset>
        </copy>

        <!-- Copy icons over -->
        <copy todir="${dist}/${icons}">
            <fileset dir="${icons}">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

</project>
